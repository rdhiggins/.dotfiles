#!/bin/bash

alias hdu='du -h . | grep "^[0-9\.]\+G"'
alias ds="du -h -d 1"
alias cpdir="pwd | pbcopy"

alias dir="ls -laGh"
alias tu='top -o cpu'       # cpu
alias tm='top -o vsize'     # Memory

alias ccache='dscacheutil -flushcache'

alias to.w='cd ~/Workspace'
alias to.rails='cd ~/Workspace/rails'
alias to.ruby='cd ~/Workspace/ruby'
alias to.ios='cd ~/Workspace/ios'
alias to.dot='cd ~/.dotfiles'
alias to.python='cd ~/Workspace/python'
alias to.down='cd ~/Downloads'
alias to.doc='cd ~/Documents'
alias to.swift='cd ~/Workspace/swift'
alias to.web='cd ~/Workspace/web'
alias to.mac='cd ~/Workspace/mac'
alias to.android='cd ~/Workspace/android'
alias to.md='cd ~/Library/Mobile\ Documents'
alias to.play=" cd ~/Workspace/playgrounds"
alias to.spz='cd ~/Workspace/spazsoft'
alias to.stc='cd ~/Workspace/spazsoft/apple/StackCalc'
alias to.spzt='cd ~/Workspace/spazsoft/apple/SPZTracker'
alias to.uml='cd ~/Workspace/spazsoft/apple/UMLNoodler'
alias to.pack='cd ~/Workspace/spazsoft/apple/packages'

alias isotime='ruby -r time -e "puts Time.now.utc.iso8601"'

alias openapp='open `appcontainer`'
alias opendata='open `datacontainer`'
alias to.sim='pushd `appcontainer`'
alias to.data='pushd `datacontainer`'

# Android
alias find.git='find . -name .git -type d -prune'

alias pd='sips -g pixelWidth -g pixelHeight'

alias lgi='git ls-files -ci --exclude-standard'
alias agi='git ls-files -ci --exclude-standard -z | xargs -0 git rm --cached'
alias greset='git checkout -- .'

# Homebrew
alias buou='brew update && brew outdated && brew upgrade && brew cleanup'
alias brew.install='brew tap Homebrew/bundle'
alias brew.backup='brew bundle dump --file=~/.Brewfile -f'
alias brew.restore='brew bundle --file=~/.Brewfile'
alias brew.list='cat ~/.Brewfile'
alias brew.clean='brew bundle cleanup --file=~/.Brewfile'

# Forecast
alias fc.chi='curl wttr.in/Chicago'

function xc_clean {
  rm -rf ~/Library/Caches/com.apple.dt.Xcode/
  rm -rf ~/Library/Developer/Xcode/DerivedData/
}

function jc () {
  curl -s ${1} | json
}

alias rgrd='vsplit_tab "bundle exec guard"'
alias rser='vsplit_tab rs'
alias rpry='pry -r ./config/environment -r rails/console/app -r rails/console/helpers'
alias roa='split_tab "bundle exec guard" && rser'
alias ora='chrome http://localhost:3000'

# Dump Developer Certificates
alias dump.ident='security find-identity -v -p codesigning'

alias ssh-cs='ssh-add ~/.ssh/codespace_ssh_key'
alias ssh-syn='ssh-add ~/.ssh/id_synology'

# Glyph
alias glyph='open ~/Workspace/html/glyphicons_pro/glyphicons/web/html_css/index.html'

# Quicklook
alias ql='qlmanage -p $@'

# Frequent Directories
alias ss='cd ~/Workspace/rails/spazsoft4'
alias flsc='rm -rf ~/tmp/*'

# Edit and reload shell configurations
alias reload='source ~/.zshrc'
alias edot='subl -w ~/.dotfiles'

function popcommands {
  history |
    awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' |
    sort -rn |
    head
}

function new_rails {
  scrolls new ${1} -s rspec capybara guard
  cd ${1}
  rails g controller Welcome index
}

# Create a new rails application using the app_template
function nr {
  rails new ${1} --skip-test-unit -m ~/.dotfiles/rails/app_template.rb
}

# File & Directory finding aliases
alias ff='noglob find . -type f -name '
alias ff.h='noglob find ~ -type f -name '
alias fd='noglob find . -type d -name '
alias fd.h='noglob find ~ -type f -name '

# Command that makes a directory and optionally change into it
# once it has been created
function mdc {
  mkdir -p "$1" && cd "$1"
}

# Command that creates a file and launches the editor on it
function mf {
  touch $1
  edit $1
}

# Commands used to testing a rails application in production mode
function rails_production {
  # RAILS_ENV=production bundle exec rake db:migrate
  # RAILS_ENV=production bundle exec rake db:seed
  RAILS_ENV=production bundle exec rake assets:precompile
  RAILS_ENV=production bundle exec rails s
}
function rails_production_cleanup {
  rm -rf public/assets/*
}

# Command used to reset rails database
function rails_reset_db {
  rm db/development.sqlite3 db/test.sqlite3
  bundle exec rake db:setup
}

# Open a local file
function chrome {
  open $@ --args --allow-file-access-from-files
}
alias chrome.ss='chrome http://www.spazstik-software.com'
alias chrome.lss='chrome http://spazsoft.dev'


function nrs {
  pushd . > /dev/null
  cd ~/bin > /dev/null
  newrubyscript $1
  edit $1
  popd > /dev/null
}

function mountAndroid {
  hdiutil attach ~/Development/android-source/android.dmg.sparseimage -mountpoint /Volumes/android
}

function code () {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
        open -a "Visual Studio Code" --args "$F"
    fi
}
