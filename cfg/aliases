#!/bin/bash

alias hdu='du -h . | grep "^[0-9\.]\+G"'

alias dir="ls -laGh"
alias tu='top -o cpu'       # cpu
alias tm='top -o vsize'     # Memory

alias ccache='dscacheutil -flushcache'

alias to.stc='cd ~/ios.workspace/StackCalc'
alias to.w='cd ~/Workspace'
alias to.rails='cd ~/Workspace/rails'
alias to.ruby='cd ~/Workspace/ruby'
alias to.ios='cd ~/Workspace/ios'

function jc () {
  curl -s ${1} | ruby -r json -e 'jj JSON.parse gets'
}

alias rgrd='vsplit_tab "bundle exec guard"'
alias rser='vsplit_tab rs'
alias rpry='pry -r ./config/environment'
alias roa='split_tab "bundle exec guard" && rser'
alias ora='chrome http://localhost:3000'

alias ssh-cs='ssh-add ~/.ssh/codespace_ssh_key'
alias ssh-syn='ssh-add ~/.ssh/id_synology'

# Glyph
alias glyph='open ~/Workspace/html/glyphicons_pro/glyphicons/web/html_css/index.html'

# Quicklook
alias ql='qlmanage -p $@'

# Frequent Directories
alias ss='cd ~/Workspace/rails/spazsoft4'
alias flsc='rm -rf ~/tmp/*'

# Edit and reload shell configurations
alias reload='source ~/.zshrc'
alias edot='st ~/.dotfiles'

function tcap {
  echo "$*" | ruby -r titleize -e 'puts gets.titleize'  
}

function popcommands {
  history |
    awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' |
    sort -rn |
    head
}

function new_rails {
  scrolls new ${1} -s rspec capybara guard
  cd ${1}
  rails g controller Welcome index
}

# Create a new rails application using the app_template
function nr {
  rails new ${1} --skip-test-unit -m ~/.dotfiles/rails/app_template.rb
}

# File & Directory finding aliases
alias ff='noglob find . -type f -name '
alias ff.h='noglob find ~ -type f -name '
alias fd='noglob find . -type d -name '
alias fd.h='noglob find ~ -type f -name '

# Command that makes a directory and optionally change into it
# once it has been created
function md {
  # mkdir -p $1
  # cd $1
  case $1 in
     -c) mkdir -p "$2" && cd "$2" ;;
     *) mkdir -p "$@" ;;
  esac
}

# Command that creates a file and launches the editor on it
function mf {
  touch $1
  edit $1
}

# Commands used to testing a rails application in production mode
function rails_production {
  RAILS_ENV=production bundle exec rake db:migrate
  RAILS_ENV=production bundle exec rake db:seed
  RAILS_ENV=production bundle exec rake assets:precompile
  RAILS_ENV=production bundle exec rails s
}
function rails_production_cleanup {
  rm -rf public/assets/*
}

# Command used to reset rails database
function rails_reset_db {
  rm db/development.sqlite3
  bundle exec rake db:migrate
  bundle exec rake db:seed
}

# Open a local file
function chrome {
  open $@ --args --allow-file-access-from-files
}
alias chrome.ss='chrome http://www.spazstik-software.com'
alias chrome.lss='chrome http://spazsoft.dev'


function nrs {
  pushd . > /dev/null
  cd ~/bin > /dev/null
  newrubyscript $1
  edit $1
  popd > /dev/null
}

function mountAndroid {
  hdiutil attach ~/Development/android-source/android.dmg.sparseimage -mountpoint /Volumes/android
}